import java.net.*;
import java.util.Set;

/*
 * Metodo de llamada al servidor: [Puerto de escucha servidor], [IP del controlador],
 * [Puerto del controlador], [Num de conexiones simultaneas]
 */
public class ServidorConcurrente {
	private static int hilosCorriendo = 0;
	
	@SuppressWarnings("resource")
	public static void main(String[] args) throws ConnectException {
		String puerto = "";
		int conexionesMax = Integer.parseInt(args[3]);

		try {
			if(args.length == 4) {
				puerto = args[0];
				ServerSocket skServidor = new ServerSocket(Integer.parseInt(puerto));
				System.out.println("HttpServer listo, escuchando en el puerto: " + puerto);
				//Comunicacion con el cliente
				
				for(;;) {	//A la espera de que un cliente quiera conectarse
					if(hilosCorriendo < conexionesMax) {
						Socket skCliente = skServidor.accept();
						System.out.println("HttpServer sirviendo al cliente...");
						sumaHilosCorriendo();
						Thread t = new HiloServidor(skCliente, args[1], args[2]);
						t.start();
					} else if(hilosCorriendo <= conexionesMax) {
						//Estaria bien mostrar aqui una ventana html de error al cliente que intenta conectar
						throw new Exception("El servidor no puede servir a mas clientes, intentalo de nuevo en unos instantes.");
					}
				}
				
				/*for(;;) {	//A la espera de que un cliente quiera conectarse
					if(hilosCorriendo > conexionesMax) {
						//Estaria bien mostrar aqui una ventana html de error al cliente que intenta conectar
						throw new Exception("El servidor no puede servir a mas clientes, intentalo de nuevo en unos instantes.");
					} else if(hilosCorriendo <= conexionesMax) {
						Socket skCliente = skServidor.accept();
						System.out.println("HttpServer sirviendo al cliente...");
						sumaHilosCorriendo();
						Thread t = new HiloServidor(skCliente, args[1], args[2]);
						t.start();
					}
				}*/
			} else {
				System.out.println("Debe indicar el puerto de escucha del servidor,"
									+ " IP del controlador,"
									+ " puerto de escucha del controlador y"
									+ " el numero de conexiones simultaneas permitidas"
									);
				System.out.println("Formato: $./Servidor [puerto_servidor] [IP del controlador] [Puerto de escucha del controlador] [num_conexiones]");
				System.exit(1);
			}
		} catch(Exception e){
			System.out.println("Error intentando conectar con el cliente: " + e.toString());
		}
	}
	
	public static void sumaHilosCorriendo() {
		hilosCorriendo += 1;
	}
	
	public static void restaHilosCorriendo() {
		hilosCorriendo = hilosCorriendo - 1;
	}
}
