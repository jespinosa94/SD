import java.lang.Exception;
import java.net.Socket;
import java.io.*;

public class HiloServidor extends Thread {
	private Socket skCliente;
	private String IpController;
	private String PuertoController;
	
	public HiloServidor(Socket p_cliente, String IpController, String PuertoController) {
		this.skCliente = p_cliente;
		this.IpController = IpController;
		this.PuertoController = PuertoController;
	}


	public String leeSocket(Socket p_sk, String p_Datos) {
		try {
			//Lectura caracter a caracter
			InputStream aux = p_sk.getInputStream();
			BufferedReader flujo = new BufferedReader(new InputStreamReader(aux));
			p_Datos = new String();
			p_Datos = flujo.readLine();
		} catch(Exception e) {
			System.out.println("Error: " + e.toString());
		}
		return p_Datos;
	}


	public void escribeSocket(Socket p_sk, String p_Datos) {
		try {
			OutputStream aux = p_sk.getOutputStream();
			PrintWriter flujo = new PrintWriter(new OutputStreamWriter(aux));
			flujo.println(p_Datos);
			flujo.flush(); //Limpieza del Buffer
		} catch(Exception e) {
			System.out.println("Error: " + e.toString());
		}
		return;
	}

	public String procesaCadena(String Cadena) {
		String[] s = Cadena.split(" ");
		String resultado = "";
		
		if (s[0].equals("GET")) {
			System.out.println("(" + s[1].toString() + ")");
			if(s[1].contains("controladorSD")) {
				//ConectaController(s[1]);
			}
		} else {
			//Error 405, comando no soportado
		}
		
		
		return resultado;
	}

	public void run() {
		String Cadena = "", resultado = "";

		try {
			Cadena = this.leeSocket(skCliente, Cadena);
//d			System.out.println("[" + Cadena + "]");
			resultado = this.procesaCadena(Cadena);
			Cadena = "" + resultado;
			this.escribeSocket(skCliente, Cadena);
			skCliente.close();

		} catch(Exception e) {
			System.out.println("Error: " + e.toString());
		}
	}

}
